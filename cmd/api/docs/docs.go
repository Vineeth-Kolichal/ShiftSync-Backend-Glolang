// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/attendance": {
            "get": {
                "description": "api for get employees attendances",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "attendances"
                ],
                "summary": "access attendance of employees",
                "operationId": "Attendance",
                "responses": {
                    "200": {
                        "description": "successfully fetched attendance",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "failed to get attendance",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "employee id not found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/employee/signup": {
            "get": {
                "description": "api for employees to signup",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SignUp"
                ],
                "summary": "For Getting Signup Page",
                "operationId": "Signup",
                "responses": {
                    "200": {
                        "description": "successfully get signup page",
                        "schema": {
                            "$ref": "#/definitions/request.SignUp"
                        }
                    }
                }
            }
        },
        "/leave/apply": {
            "post": {
                "description": "api for employees to apply leave",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leave"
                ],
                "summary": "ApplyLeave",
                "operationId": "Applyleave",
                "parameters": [
                    {
                        "description": "input field",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.Leave"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully applied for leave",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "invalid input",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/leave/statis": {
            "get": {
                "description": "api for employees to get leaave status/history",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "status"
                ],
                "summary": "access leave status history",
                "operationId": "LeaveStatus",
                "responses": {
                    "200": {
                        "description": "successfully fetched leave status",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "failed to get leave history",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "femployee id not found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "request.Leave": {
            "type": "object",
            "properties": {
                "fromdate": {
                    "type": "string"
                },
                "leavetype": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "todate": {
                    "type": "string"
                }
            }
        },
        "request.SignUp": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "response.Response": {
            "type": "object",
            "properties": {
                "data": {},
                "errors": {},
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
